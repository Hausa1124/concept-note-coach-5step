import React from 'react';
import AppShell from '../ui/AppShell';
import LiveOutline from '../ui/LiveOutline';
import { useForm } from '../context/FormContext';

type Sectioned = {
  basics?: any;
  problem_analysis?: any;
  objectives_outcomes?: any;
  activities_budget?: any;
  summary?: any;
};

export default function Results() {
  const { data } = useForm();

  // Try to read structured result saved after submit
  let structured: Sectioned | null = null;
  try {
    const raw = sessionStorage.getItem('cnc_result');
    if (raw) structured = JSON.parse(raw);
  } catch {
    structured = null;
  }

  // Fallback: map current form into sections (so page works today)
  const fallback: Sectioned = {
    basics: {
      title: data.title,
      region: data.countryRegion,
      organization: data.organization,
      budget_range: data.budget,
      duration: data.duration,
    },
    problem_analysis: {
      statement: data.problem,
      root_causes: data.rootCauses,
      evidence: data.evidence,
    },
    objectives_outcomes: {
      overall_objective: data.overallObjective,
      specific_objectives: data.specificObjectives,
    },
    activities_budget: {
      target_groups: data.targetGroups,
      direct_beneficiaries: data.directBeneficiaries,
      indirect_beneficiaries: data.indirectBeneficiaries,
    },
    summary: { note: 'Will be generated by analysis.' },
  };

  const resultData = structured ?? fallback;

  const copyAll = async () => {
    try {
      await navigator.clipboard.writeText(JSON.stringify(resultData, null, 2));
      alert('Copied to clipboard.');
    } catch {
      alert('Copy failed.');
    }
  };

  const goBack = () => history.back();

  return (
    <AppShell
      title="Concept Note Coach"
      subtitle="Results"
      step={5}
      total={5}
      outline={<LiveOutline />}
    >
      <h2 className="section-title">Results</h2>

      {(['basics','problem_analysis','objectives_outcomes','activities_budget','summary'] as const).map((key) => (
        <div key={key} className="card" style={{padding:20, marginBottom:16}}>
          <strong style={{textTransform:'capitalize'}}>
            {key.replace(/_/g,' ')}
          </strong>
          <pre style={{whiteSpace:'pre-wrap', marginTop:8}}>
            {JSON.stringify((resultData as any)[key] ?? {}, null, 2)}
          </pre>
        </div>
      ))}

      <div style={{display:'flex', gap:12, marginTop:12}}>
        <button className="btn btn-ghost" onClick={goBack}>‚Üê Back to Edit</button>
        <button className="btn btn-primary" onClick={copyAll}>Copy JSON</button>
      </div>
    </AppShell>
  );
}